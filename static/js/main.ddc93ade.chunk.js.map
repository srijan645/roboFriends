{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCLDQ,EAAO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAC7B,OACI,mCACA,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,iBACrB,gCACI,6BAAKF,IACL,4BAAIC,aCLNK,EAAW,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACvB,OACI,mCAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACL,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCANC,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,2BAA2BU,KAAK,SAASC,YAAY,eAAeC,SAAUH,OCK5FI,EARC,SAACC,GACb,OACI,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACKJ,EAAMK,YCgBJC,E,kDAlBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKX,MAAMK,a,GAfGQ,aC0DbC,G,wDApDb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAZ1C,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IAJH,E,qDAQhB,WAAoB,IAAD,OACfG,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAEA,EAASC,UACxB9C,MAAK,SAAA+C,GAAK,OAAE,EAAKX,SAAS,CAACtB,OAAOiC,S,oBAMrC,WACE,MAA2BZ,KAAKJ,MAAzBjB,EAAP,EAAOA,OAAO2B,EAAd,EAAcA,YACTO,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAEzD,OAAqB,IAAlBrC,EAAOuC,OACC,yCAIH,sBAAK3C,UAAU,KAAf,UACY,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACH,cAAC,EAAD,CAAUzB,OAAQkC,e,GAjCnBX,cCAlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,mCACA,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.ddc93ade.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nexport const Card = ({name,email,id}) => {\r\n    return (\r\n        <>\r\n        <div className='tc bg-light-green dib br3 ma2 pa2 bw2 shadow-5 grow'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200Ã—200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>    \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Card} from './Card'\r\n\r\n\r\nexport  const Cardlist = ({robots}) => {\r\n    return (\r\n        <>\r\n        {\r\n            robots.map((user,i)=>{\r\n                return(\r\n           <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n                );\r\n            })\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n const SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba bg--lightest-blue' type='search' placeholder='search robot' onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  SearchBox","import React from 'react'\r\n\r\nconst  Scroll = (props) => {\r\n    return( \r\n        <div style={{overflow:'scroll',border:'5px solid black',height:'800px'}}>\r\n            {props.children}\r\n            </div>\r\n        \r\n    )   \r\n};\r\nexport default Scroll;","import React,{Component} from 'react'\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n  \r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n   render(){\r\n       if(this.state.hasError){\r\n           return <h1>OOOPS! that is not good</h1>\r\n       }\r\n       return this.props.children\r\n   }\r\n    \r\n}\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport {Cardlist} from '../components/Cardlist';\r\nimport SearchBox from '../components//SearchBox';\r\nimport Scroll from '../components//Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(Response=>Response.json())\r\n    .then(users=>this.setState({robots:users}))\r\n}\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n \r\n  }\r\n  render() {\r\n    const {robots,searchfield}=this.state;\r\n   const filteredRobots = robots.filter(robot =>{\r\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n})\r\nif(robots.length === 0){\r\n    return <h1>LOADING</h1>\r\n}\r\nelse{\r\n    return(\r\n        <div className='tc'>\r\n                    <h1 className='f2'>RoBoFrIeNd</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                      <ErrorBoundary>\r\n                   <Cardlist robots={filteredRobots}/> \r\n                   </ErrorBoundary>\r\n                   </Scroll>\r\n                </div>\r\n                );\r\n}\r\n\r\n\r\n  }\r\n}\r\n \r\n \r\n\r\n  \r\n    \r\n    \r\n      \r\n  \r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport App from './container/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n    <App/>\n    </>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}